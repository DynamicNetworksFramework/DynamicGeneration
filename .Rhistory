qplot(Sepal.Width, Sepal.Length, data = iris)
source('C:/Users/sandy/Dropbox/2014_Sandy/Dynamic Network Framework/DynamicGeneration/DynamicGenerationExperiments.R')
install.packages("testthat")
install.packages("igraph")
source('C:/Users/sandy/Dropbox/2014_Sandy/Dynamic Network Framework/DynamicGeneration/DynamicGenerationExperiments.R')
source('C:/Users/sandy/Dropbox/2014_Sandy/Dynamic Network Framework/DynamicGeneration/DynamicGenerationExperiments.R')
source('C:/Users/sandy/Dropbox/2014_Sandy/Dynamic Network Framework/DynamicGeneration/DynamicGenerationExperiments.R')
data = prepare.data(name)
classes = as.matrix(data[[2]])
data = as.matrix(data[[1]])
nclasses = length(unique(classes))
ndata = nrow(data)
if(msgDebug){
cat("\nSeed:",seed)
cat("\nDataset:",name)
cat("\nndata:",ndata)
cat("\nnclasses:",nclasses)
}
dy.data = prepare.dy.data(data,pdataincial)
ndy.data = nrow(dy.data)
ndy.classes = length(unique(classes[dy.data[,1],]))
if(msgDebug){
cat("\nndydata:",ndy.data)
cat("\nndyclasses:",ndy.classes)
}
generate.network <- function(dy.data, ndy.data = nrow(dy.data), similarity.function = inverse.euclidean){
sim.m = similarity.matrix(dy.data[,-1],similarity.function)
ep = calculate.epsilon(sim.m)
stopifnot(ep!=Inf)
adj.m = knn.epsilon.cut(sim.m,ep=ep)
net = graph.adjacency(adj.m,mode="max",diag=F)
V(net)$index = 0
V(net)$data = rep(0,ncol(dy.data)-1)
for(i in 1:ndy.data){
V(net)[i]$index = dy.data[i,1]
V(net)[i]$data = dy.data[i,-1]
}
return(net)
}
net = generate.network(dy.data)
warnings()
similarity.function = inverse.euclidean
sim.m = similarity.matrix(dy.data[,-1],similarity.function)
ep = calculate.epsilon(sim.m)
stopifnot(ep!=Inf)
adj.m = knn.epsilon.cut(sim.m,ep=ep)
net = graph.adjacency(adj.m,mode="max",diag=F)
V(net)$index = 0
V(net)$data = rep(0,ncol(dy.data)-1)
V(net)$data[] = rep(0,ncol(dy.data)-1)
V(net)$data = 0
V(net)$data
for(i in 1:ndy.data){
V(net)[i]$index = dy.data[i,1]
V(net)[i]$data = dy.data[i,-1]
}
V(net)$data
V(net)$data = c()
set_vertex_attr(net,pk)
set_vertex_attr(net,name = pk)
set_vertex_attr(net,name = pk,value = 0)
set_vertex_attr(net,name = 'pk',value = 0)
set_vertex_attr(net,name = 'data',value = rep(0,ncol(dy.data)-1))
sim.m = similarity.matrix(dy.data[,-1],similarity.function)
ep = calculate.epsilon(sim.m)
stopifnot(ep!=Inf)
adj.m = knn.epsilon.cut(sim.m,ep=ep)
net = graph.adjacency(adj.m,mode="max",diag=F)
# set_vertex_attr(net,name = 'pk',value = 0)
# set_vertex_attr(net,name = 'data',value = rep(0,ncol(dy.data)-1))
# V(net)$index = 0
# V(net)$data = c()
for(i in 1:ndy.data){
V(net)[i]$pk = dy.data[i,1]
V(net)[i]$data = dy.data[i,-1]
}
return(net)
sim.m = similarity.matrix(dy.data[,-1],similarity.function)
ep = calculate.epsilon(sim.m)
stopifnot(ep!=Inf)
adj.m = knn.epsilon.cut(sim.m,ep=ep)
net = graph.adjacency(adj.m,mode="max",diag=F)
V(net)$pk = dy.data[,1]
source('C:/Users/sandy/Dropbox/2014_Sandy/Dynamic Network Framework/DynamicGeneration/DynamicGenerationExperiments.R')
source('C:/Users/sandy/Dropbox/2014_Sandy/Dynamic Network Framework/DynamicGeneration/DynamicGenerationExperiments.R')
source('C:/Users/sandy/Dropbox/2014_Sandy/Dynamic Network Framework/DynamicGeneration/DynamicGenerationExperiments.R')
source('C:/Users/sandy/Dropbox/2014_Sandy/Dynamic Network Framework/DynamicGeneration/DynamicGenerationExperiments.R')
source('C:/Users/sandy/Dropbox/2014_Sandy/Dynamic Network Framework/DynamicGeneration/DynamicGenerationExperiments.R')
source('C:/Users/sandy/Dropbox/2014_Sandy/Dynamic Network Framework/DynamicGeneration/DynamicGenerationExperiments.R')
source('C:/Users/sandy/Dropbox/2014_Sandy/Dynamic Network Framework/DynamicGeneration/DynamicGenerationExperiments.R')
source('C:/Users/sandy/Dropbox/2014_Sandy/Dynamic Network Framework/DynamicGeneration/DynamicGenerationExperiments.R')
net = add.vertices(net,1)
V(net)[vcount(net)]$pk = index.newdata
source('C:/Users/sandy/Dropbox/2014_Sandy/Dynamic Network Framework/DynamicGeneration/DynamicGeneration.R')
source('C:/Users/sandy/Dropbox/2014_Sandy/Dynamic Network Framework/DynamicGeneration/DynamicGenerationExperiments.R')
source('C:/Users/sandy/Dropbox/2014_Sandy/Dynamic Network Framework/DynamicGeneration/DynamicGenerationExperiments.R')
source('C:/Users/sandy/Dropbox/2014_Sandy/Dynamic Network Framework/DynamicGeneration/DynamicGeneration.R')
source('C:/Users/sandy/Dropbox/2014_Sandy/Dynamic Network Framework/DynamicGeneration/DynamicGenerationExperiments.R')
source('C:/Users/sandy/Dropbox/2014_Sandy/Dynamic Network Framework/DynamicGeneration/DynamicGenerationExperiments.R')
source('C:/Users/sandy/Dropbox/2014_Sandy/Dynamic Network Framework/DynamicGeneration/DynamicGenerationExperiments.R')
source('C:/Users/sandy/Dropbox/2014_Sandy/Dynamic Network Framework/DynamicGeneration/DynamicGenerationExperiments.R')
View(dy.data)
View(classes)
source('C:/Users/sandy/Dropbox/2014_Sandy/Dynamic Network Framework/DynamicGeneration/DynamicGenerationExperiments.R')
classes
source('C:/Users/sandy/Dropbox/2014_Sandy/Dynamic Network Framework/DynamicGeneration/DynamicGenerationExperiments.R')
View(classes)
data = prepare.data(name)
classes = as.matrix(as.factor(data[[2]]))
classes = as.matrix((data[[2]]))
as.vector(classes)
classes = as.matrix((data[[2]]))
as.vector.factor(classes)
classes = as.matrix((data[[2]]))
as.factor(classes)
rm(list = ls())
dirname = getSrcDirectory(function(x) {x})
setwd(dirname)
require('testthat')
source('Datasets.R')
source('SimilarityMeasures.R')
source('DynamicSimulation.R')
source('DynamicGeneration.R')
error.file = paste(getwd(),"/Errors.dat",sep="")
msgDebug = T
pdatainitial = 0.5
nseeds = 100
seedspool = sample(1:1e+05,nseeds,replace=F)
seed = seedspool[1]
set.seed(seed)
aux.names.datasets = names.datasets[2]
name = iris
name = "iris"
data = prepare.data(name)
classes = as.matrix((data[[2]]))
data = as.matrix(data[[1]])
nclasses = length(unique(classes))
ndata = nrow(data)
if(msgDebug){
cat("\nSeed:",seed)
cat("\nDataset:",name)
cat("\nndata:",ndata)
cat("\nnclasses:",nclasses)
}
dy.data = prepare.dy.data(data,pdataincial)
ndy.data = nrow(dy.data)
ndy.classes = length(unique(classes[dy.data[,1],]))
if(msgDebug){
cat("\nndydata:",ndy.data)
cat("\nndyclasses:",ndy.classes)
}
net = generate.network(dy.data)
plot.net(net,classes,"before")
aux = c(1:ndata)
new.indexes = aux[!aux %in% dy.data[,1]]
if(msgDebug){
cat("\nNew Data:")
}
aux = infomap.community(net)
result = compare(classes[dy.data[,1]],aux$membership,"nmi")
if(msgDebug){
cat("","nmi:",result)
}
classes[dy.data[,1]]
aux$membership
length(classes[dy.data[,1]])
i = 11
if(msgDebug){
cat("\n",i)
}
dy.data = add.object(i,dy.data,data)
net = add.vertex.network(net,i,dy.data)
aux = infomap.community(net)
result = compare(classes[dy.data[,1]],aux$membership,"nmi")
if(msgDebug){
cat("","nmi:",result)
}
as.numeric(classes)
as.factor(classes)
as.numeric(as.factor(classes))
source('C:/Users/sandy/Dropbox/2014_Sandy/Dynamic Network Framework/DynamicGeneration/DynamicGenerationExperiments.R')
source('C:/Users/sandy/Dropbox/2014_Sandy/Dynamic Network Framework/DynamicGeneration/DynamicGenerationExperiments.R')
source('C:/Users/sandy/Dropbox/2014_Sandy/Dynamic Network Framework/DynamicGeneration/DynamicGenerationExperiments.R')
